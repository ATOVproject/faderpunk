name: Check and Build Firmware (CI)
on:
  push:
    branches:
      - main
    tags-ignore:
      - 'v*'
  pull_request:
    branches:
      - main
env:
  CARGO_TERM_COLOR: always
permissions:
  contents: read
jobs:
  lint:
    name: Formatting and Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt
          targets: thumbv8m.main-none-eabihf
      - run: cargo fmt -- --check
      # TODO: enable later
      # - run: cargo clippy --bin faderpunk --target thumbv8m.main-none-eabihf -- -D warnings
      - run: cargo clippy --bin faderpunk --target thumbv8m.main-none-eabihf
  check-configurator:
    name: Generate bindings and build configurator
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Setup rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
      - name: Install dependencies (configurator)
        run: pnpm install --frozen-lockfile
        working-directory: ./configurator
      - name: Generate postcard bindings (for configurator)
        run: ./gen-bindings.sh
      - name: Build configurator
        run: pnpm run build
        working-directory: ./configurator
  build_firmware_check:
    name: Build Firmware (Check)
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install System Dependencies
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get clean && sudo apt-get update
          sudo apt-get install -y libudev-dev
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: thumbv8m.main-none-eabihf
      - run: cargo install flip-link
      - run: cargo build --bin faderpunk --release --target thumbv8m.main-none-eabihf
